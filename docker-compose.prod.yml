name: itcapital
services:
  app:
    build:
      context: ./docker/8.4
      args:
        WWWGROUP: 1000
    container_name: "${COMPOSE_PROJECT_NAME}-app"
    env_file:
      - .env
    networks:
      - net
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    expose:
      - "9000"
    ports:
      - "${REVERB_SERVER_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: ./docker/nginx
    container_name: "${COMPOSE_PROJECT_NAME}-nginx"
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - app
    volumes:
      - ./:/var/www/html
    networks:
      - net
    restart: unless-stopped

  pgdb:
    build:
      context: ./docker/db
    container_name: "${COMPOSE_PROJECT_NAME}-pgdb"
    environment:
      POSTGRES_USER: ${DB_USERNAME:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_DATABASE:-appdb}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - net
    restart: unless-stopped

  redis:
    build:
      context: ./docker/redis
    container_name: redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - net
    restart: unless-stopped

  cron:
    build:
      context: ./docker/cron
      args:
        BASE_IMAGE: ubuntu:22.04
    container_name: "${COMPOSE_PROJECT_NAME}-cron"
    env_file:
      - .env
    depends_on:
      - app
      - pgdb
      - redis
    networks:
      - net
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    command: /usr/local/bin/entrypoint.sh
    healthcheck:
      test: ["CMD-SHELL", "pgrep crond || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  supervisor:
    build:
      context: ./docker/supervisor
      args:
        BASE_IMAGE: ubuntu:22.04
    container_name: "${COMPOSE_PROJECT_NAME}-supervisor"
    env_file:
      - .env
    depends_on:
      - app
    networks:
      - net
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    healthcheck:
      test: ["CMD-SHELL", "pgrep supervisord || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  net:
    driver: bridge

volumes:
  db-data:
  redis-data:
