name: Tests

on:
  pull_request:
    branches:
      - main
      - master
      - develop
  push:
    branches:
      - develop

jobs:
  tests:
    name: Run Tests (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ['8.3', '8.4']

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_database
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, pgsql, pdo_pgsql, redis, intl, gd, zip, bcmath
          coverage: none

      - name: 📦 Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: 💾 Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: 🔧 Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: 📝 Copy .env.testing
        run: cp .env.example .env

      - name: 🔑 Generate application key
        run: php artisan key:generate

      - name: 🗄️ Run migrations
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: test_database
          DB_USERNAME: test_user
          DB_PASSWORD: test_password
        run: php artisan migrate --force

      - name: 🧪 Run PHPUnit tests
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: test_database
          DB_USERNAME: test_user
          DB_PASSWORD: test_password
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: php artisan test

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mbstring, pgsql, intl
          coverage: none

      - name: 📦 Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: 🎨 Run Laravel Pint
        run: vendor/bin/pint --test

      - name: 🔍 Run PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=2G

  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build assets
        run: npm run build

      - name: ✅ Build successful
        run: echo "Frontend build completed successfully"
